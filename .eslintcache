[{"/Users/codybonsma/gt-ft/sandbox/rps-game/src/index.js":"1","/Users/codybonsma/gt-ft/sandbox/rps-game/src/App.js":"2","/Users/codybonsma/gt-ft/sandbox/rps-game/src/game/Game.jsx":"3","/Users/codybonsma/gt-ft/sandbox/rps-game/src/Home/Home.jsx":"4","/Users/codybonsma/gt-ft/sandbox/rps-game/src/Footer/Footer.jsx":"5","/Users/codybonsma/gt-ft/sandbox/rps-game/src/Modal/Modal.jsx":"6"},{"size":454,"mtime":1607905180879,"results":"7","hashOfConfig":"8"},{"size":540,"mtime":1611009588757,"results":"9","hashOfConfig":"8"},{"size":4664,"mtime":1611439758942,"results":"10","hashOfConfig":"8"},{"size":2012,"mtime":1611194449489,"results":"11","hashOfConfig":"8"},{"size":237,"mtime":1611011037923,"results":"12","hashOfConfig":"8"},{"size":415,"mtime":1611436612330,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"9n0wxu",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"16"},"/Users/codybonsma/gt-ft/sandbox/rps-game/src/index.js",[],["29","30"],"/Users/codybonsma/gt-ft/sandbox/rps-game/src/App.js",[],"/Users/codybonsma/gt-ft/sandbox/rps-game/src/game/Game.jsx",["31","32","33"],"/Users/codybonsma/gt-ft/sandbox/rps-game/src/Home/Home.jsx",["34"],"import React, { useState } from \"react\";\nimport { ToggleButton } from \"react-bootstrap\";\nimport \"./Home.css\";\n\nconst Home = () => {\n  const [pane, setPane] = useState(true);\n\n  // these functions toggle between tabs\n  const toggleOptOne = () => {\n    setPane(true)\n  }\n\n  const toggleOptTwo = () => {\n    setPane(false)\n  }\n\n  return (\n    <div className=\"container main-nav\">\n      <h2 id=\"front-title\">Rock Paper Scissors</h2>\n      <hr />\n\n      <div className=\"card text-center home-tron\">\n        <div className=\"card-header\">\n          <ul className=\"nav nav-tabs card-header-tabs\">\n            <li className=\"nav-item\">\n              <a\n                className=\"nav-link\"\n                onClick={() => toggleOptOne()}\n                role=\"tab\"\n                data-toggle=\"tab\"\n                href=\"#start\"\n              >\n                Start\n              </a>\n            </li>\n            <li className=\"nav-item\">\n              <a\n                className=\"nav-link\"\n                onClick={() => toggleOptTwo()}\n                role=\"tab\"\n                href=\"#info\"\n                data-toggle=\"tab\"\n              >\n               Info\n              </a>\n            </li>\n          </ul>\n        </div>\n\n        {pane ? (\n          <div className=\"tab-content\">\n            <div\n              className=\"card-body tab-pane active\"\n              role=\"tabpanel\"\n              id=\"start\"\n            >\n              <h5 className=\"card-title\">Special title treatment</h5>\n              <p className=\"card-text\">\n                With supporting text below as a natural lead-in to additional\n                content.\n              </p>\n              <a href=\"/game\" className=\"btn btn-go\">\n                Start Game\n              </a>\n            </div>{\" \"}\n          </div>\n        ) : (\n          <div className=\"card-body tab-pane\" role=\"tabpanel\" id=\"info\">\n            <p>Hello info about the gimma</p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","/Users/codybonsma/gt-ft/sandbox/rps-game/src/Footer/Footer.jsx",[],"/Users/codybonsma/gt-ft/sandbox/rps-game/src/Modal/Modal.jsx",["35"],"import React, { useState } from \"react\";\nimport \"./Modal.css\";\nimport ReactDom from \"react-dom\";\n\nconst Modal = ({ open, onClose }) => {\n  if (!open) return null;\n\n  return ReactDom.createPortal (\n    <>\n      <div className=\"modal-container\">\n        <h3>content</h3>\n        <button onClick={onClose}>Close Modal</button>\n      </div>\n    </>,\n    document.getElementById('portal')\n  );\n};\n\nexport default Modal;\n",{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","severity":1,"message":"41","line":26,"column":5,"nodeType":"42","messageId":"43","endLine":26,"endColumn":14},{"ruleId":"40","severity":1,"message":"41","line":30,"column":5,"nodeType":"42","messageId":"43","endLine":30,"endColumn":14},{"ruleId":"44","severity":1,"message":"45","line":116,"column":17,"nodeType":"46","endLine":120,"endColumn":19},{"ruleId":"47","severity":1,"message":"48","line":2,"column":10,"nodeType":"42","messageId":"49","endLine":2,"endColumn":22},{"ruleId":"47","severity":1,"message":"50","line":1,"column":17,"nodeType":"42","messageId":"49","endLine":1,"endColumn":25},"no-native-reassign",["51"],"no-negated-in-lhs",["52"],"no-use-before-define","'clearGame' was used before it was defined.","Identifier","usedBeforeDefined","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donâ€™t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-unused-vars","'ToggleButton' is defined but never used.","unusedVar","'useState' is defined but never used.","no-global-assign","no-unsafe-negation"]