[{"/Users/codybonsma/gt-ft/sandbox/rps-game/src/index.js":"1","/Users/codybonsma/gt-ft/sandbox/rps-game/src/App.js":"2","/Users/codybonsma/gt-ft/sandbox/rps-game/src/game/Game.jsx":"3","/Users/codybonsma/gt-ft/sandbox/rps-game/src/Home/Home.jsx":"4"},{"size":454,"mtime":1607905180879,"results":"5","hashOfConfig":"6"},{"size":484,"mtime":1609442851695,"results":"7","hashOfConfig":"6"},{"size":4240,"mtime":1610936473570,"results":"8","hashOfConfig":"6"},{"size":1339,"mtime":1610983448633,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"9n0wxu",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"12"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/codybonsma/gt-ft/sandbox/rps-game/src/index.js",[],["20","21"],"/Users/codybonsma/gt-ft/sandbox/rps-game/src/App.js",[],"/Users/codybonsma/gt-ft/sandbox/rps-game/src/game/Game.jsx",["22"],"import React, { useEffect, useState, useRef } from \"react\";\nimport \"./Game.css\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport rockImg from \"../Images/rock.png\";\nimport paperImg from \"../Images/paper.png\";\nimport scissorImg from \"../Images/scissor.png\";\n\nconst Game = () => {\n  const [userCount, setUserCount] = useState(\"\");\n  const [compCount, setCompCount] = useState(\"\");\n  const [compPlay, setCompPlay] = useState(\"\");\n  const [compAnimation, setCompAnimation] = useState(\"\");\n  const actionRef = useRef(\"\");\n\n  if (userCount === 5 || compCount === 5) {\n    setUserCount(0);\n    setCompCount(0);\n    alert(\"Game over!\");\n  }\n\n  useEffect(() => {\n    setUserCount(0);\n    setCompCount(0);\n  }, []);\n\n  const clearGame = () => {\n    setUserCount(0);\n    setCompCount(0);\n  };\n\n  const gameRound = (event) => {\n    // access the ref of the user's choice\n    console.log(event);\n    const userChoice = event;\n    // generate a random number for the computer's choice\n\n    const choices = [\"R\", \"P\", \"S\"];\n    let randomNumber = Math.floor(Math.random() * 3);\n    let computerPlay = choices[randomNumber];\n    setCompPlay(computerPlay);\n\n    if (computerPlay === \"R\") {\n      setCompAnimation(rockImg);\n    } else if (computerPlay === \"P\") {\n      setCompAnimation(paperImg);\n    } else if (computerPlay === \"S\") {\n      setCompAnimation(scissorImg);\n    }\n\n    // show the computer's move with timeout\n    setTimeout(() => {\n      setCompPlay(\"\");\n    }, 3000);\n\n    console.log(\"COMP PLAY\", computerPlay);\n\n    switch (userChoice + computerPlay) {\n      case \"RS\":\n      case \"PR\":\n      case \"SP\":\n        console.log(\"USER WINS\");\n        setUserCount(userCount + 1);\n        break;\n\n      case \"RP\":\n      case \"PS\":\n      case \"SR\":\n        console.log(\"COMPUTER WINS\");\n        setCompCount(compCount + 1);\n        break;\n\n      case \"PP\":\n      case \"RR\":\n      case \"SS\":\n        console.log(\"It's a draw\");\n        break;\n\n      default:\n        console.log(\"Nothing to report\");\n    }\n  };\n\n  return (\n    <div className=\"innerContainer container\">\n      <div className=\"row col\">\n      <div className=\"col-sm-5 scoreboard-you\">\n          <h3 id=\"scoreboard-title\">user</h3>\n        </div>\n        <div className=\"col-sm-2 scoreboard\">\n          <p>\n            {userCount} : {compCount}\n          </p>\n        </div>\n        <div className=\"col-sm-5 scoreboard-comp\">\n          <h3 id=\"scoreboard-title\">comp</h3>\n        </div>\n      </div>\n\n      <div className=\"row comp-play\">\n        <div className=\"col comp-section\">\n          <div>\n            {compPlay ? (\n              <h3>\n                computer plays <br />\n                <img\n                  className=\"computer-play rock-image\"\n                  src={compAnimation}\n                  alt=\"computer play image\"\n                />\n                {/* <h2>{compAnimation}</h2> */}\n              </h3>\n            ) : null}\n          </div>\n        </div>\n      </div>\n      <div className=\"row user-buttons\">\n        <div className=\"button shadowmane rock col-sm-4\">\n          <img\n            className=\"rock-image\"\n            src={rockImg}\n            alt=\"rock icon\"\n            ref={actionRef}\n            value=\"R\"\n            onClick={() => gameRound(\"R\")}\n          />\n        </div>\n        <div className=\"button shadowmane paper col-sm-4\">\n          <img\n            className=\"paper-image\"\n            src={paperImg}\n            alt=\"paper icon\"\n            ref={actionRef}\n            value=\"P\"\n            onClick={() => gameRound(\"P\")}\n          />\n        </div>\n        <div className=\"button shadowmane scissor col-sm-4\">\n          <img\n            className=\"scissor-image\"\n            src={scissorImg}\n            alt=\"scissor icon\"\n            ref={actionRef}\n            value=\"S\"\n            onClick={() => gameRound(\"S\")}\n          />\n        </div>\n      </div>\n      <div className=\"row lower-navigation\">\n        <div className=\"col-sm-2\" />\n        <div className=\"col-sm-4\">\n          <button>\n            <a href=\"/\">Home</a>\n          </button>\n        </div>\n        <div className=\"col-sm-4\">\n          <button onClick={() => clearGame()}>Clear</button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Game;\n","/Users/codybonsma/gt-ft/sandbox/rps-game/src/Home/Home.jsx",["23","24","25"],{"ruleId":"26","replacedBy":"27"},{"ruleId":"28","replacedBy":"29"},{"ruleId":"30","severity":1,"message":"31","line":105,"column":17,"nodeType":"32","endLine":109,"endColumn":19},{"ruleId":"33","severity":1,"message":"34","line":13,"column":15,"nodeType":"32","endLine":13,"endColumn":75},{"ruleId":"33","severity":1,"message":"34","line":18,"column":15,"nodeType":"32","endLine":18,"endColumn":48},{"ruleId":"33","severity":1,"message":"34","line":23,"column":15,"nodeType":"32","endLine":28,"endColumn":16},"no-native-reassign",["35"],"no-negated-in-lhs",["36"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donâ€™t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation"]